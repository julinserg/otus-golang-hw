version: "3"
networks:
  rabbit:
    driver: bridge
  db:
    driver: bridge

services:
  calendar_service:
    build:
      context: ../
      dockerfile: ./build/Dockerfile-calendar
    image: calendar_service_docker_image    
    volumes:
      - ../configs/config.toml:/etc/calendar/config.toml:ro    
    depends_on:
      postgres:      
          condition: service_healthy      
    restart: on-failure
    ports:
      - "8080:8080"
      - "50001:50001"
    expose:
      - 8080
      - 50001
    networks:
      - db

  calendar_service_migration:
    image: calendar_service_docker_image
    command: goose -dir /migrations postgres "host=postgres user=sergey password=sergey dbname=calendar sslmode=disable" up
    depends_on:
      - postgres
      - calendar_service   
    restart: on-failure    
    networks:
      - db

  calendar_scheduler:
    build:
      context: ../
      dockerfile: ./build/Dockerfile-scheduler
    image: calendar_scheduler_service_docker_image
    volumes:
      - ../configs/scheduler_config.toml:/etc/calendar/scheduler_config.toml:ro
    depends_on:
      postgres:      
          condition: service_healthy
      rabbit:
          condition: service_healthy
    restart: on-failure   
    networks:
      - db
      - rabbit

  calendar_sender:
    build:
      context: ../
      dockerfile: ./build/Dockerfile-sender
    image: calendar_sender_service_docker_image
    volumes:
      - ../configs/sender_config.toml:/etc/calendar/sender_config.toml:ro
    depends_on:
      rabbit:
          condition: service_healthy
    restart: on-failure   
    networks:
      - rabbit

  postgres:
    image: postgres:11.1
    ports:
      - "5432:5432"
    expose:
      - 5432
    #volumes:
    #  - ./postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: sergey
      POSTGRES_PASSWORD: sergey
      POSTGRES_DB: calendar
    networks:
      - db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d calendar -U sergey "]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbit:
    image: rabbitmq:3.9.25-management
    ports:
      - "15672:15672"
      - "5672:5672"
    expose:
      - 15672
    networks:
      - rabbit
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3